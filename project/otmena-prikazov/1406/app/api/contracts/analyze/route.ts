// app/api/contracts/analyze/route.ts - –§–∏–Ω–∞–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
import { NextRequest, NextResponse } from 'next/server'
import { getServerSession } from 'next-auth'
import { authOptions } from '@/lib/auth'
import { prisma } from '@/lib/prisma'
import { readFile } from 'fs/promises'
import { join } from 'path'
import { parseDocument } from '@/utils/documentParser'
import { sendAnalysisCompleteEmail } from '@/lib/email'

export const dynamic = 'force-dynamic'

const UPLOAD_DIR = process.env.UPLOAD_DIR || './uploads'

// –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞ –æ—Ç –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
function cleanDocumentText(text: string): string {
  // –°–Ω–∞—á–∞–ª–∞ —É–±–∏—Ä–∞–µ–º escape-—Å–∏–º–≤–æ–ª—ã –ø–µ—Ä–µ–¥ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è–º–∏
  let cleaned = text.replace(/\\_/g, '_');
  
  // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ escape-—Å–∏–º–≤–æ–ª—ã
  cleaned = cleaned.replace(/\\/g, '');
  
  // –£–±–∏—Ä–∞–µ–º —Ç–µ–≥–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–∏–ø–∞ {.underline}
  cleaned = cleaned.replace(/\{\.underline\}/g, '');
  cleaned = cleaned.replace(/\{[^}]+\}/g, '');
  
  // –ó–∞–º–µ–Ω—è–µ–º –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —Å–∫–æ–±–∫–∏ —Å –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è–º–∏ –≤–Ω—É—Ç—Ä–∏
  cleaned = cleaned.replace(/\[\s*_+\s*\]/g, '[–ü–†–û–ü–£–°–ö]');
  cleaned = cleaned.replace(/\[[^\]]*_[^\]]*\]/g, '[–ü–†–û–ü–£–°–ö]');
  
  // –£–±–∏—Ä–∞–µ–º –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö –¥–ª—è —Ç–µ–∫—Å—Ç–∞ —Ç–∏–ø–∞ [(—Å—Ä–æ–∫)]
  cleaned = cleaned.replace(/\[\s*\([^)]+\)\s*\]/g, '[–ü–†–û–ü–£–°–ö]');
  
  // –ó–∞–º–µ–Ω—è–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è –Ω–∞ [–ü–†–û–ü–£–°–ö]
  cleaned = cleaned.replace(/_{3,}/g, '[–ü–†–û–ü–£–°–ö]');
  
  // –ó–∞–º–µ–Ω—è–µ–º –æ–¥–∏–Ω–æ—á–Ω—ã–µ –∏ –¥–≤–æ–π–Ω—ã–µ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø—É—Å—Ç—ã—Ö –ø–æ–ª–µ–π
  cleaned = cleaned.replace(/¬´_¬ª/g, '¬´[–ü–†–û–ü–£–°–ö]¬ª');
  cleaned = cleaned.replace(/"_"/g, '"[–ü–†–û–ü–£–°–ö]"');
  cleaned = cleaned.replace(/'_'/g, "'[–ü–†–û–ü–£–°–ö]'");
  cleaned = cleaned.replace(/\s_+\s/g, ' [–ü–†–û–ü–£–°–ö] ');
  cleaned = cleaned.replace(/\s_+\./g, ' [–ü–†–û–ü–£–°–ö].');
  cleaned = cleaned.replace(/\s_+,/g, ' [–ü–†–û–ü–£–°–ö],');
  cleaned = cleaned.replace(/:\s*_+/g, ': [–ü–†–û–ü–£–°–ö]');
  
  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ —Ç–∏–ø–∞ _/_
  cleaned = cleaned.replace(/_\/_/g, '[–ü–†–û–ü–£–°–ö]/[–ü–†–û–ü–£–°–ö]');
  
  // –£–±–∏—Ä–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã —Å —Å–∏–º–≤–æ–ª–∞–º–∏ + - = |
  cleaned = cleaned.replace(/\+[-=+]+\+/g, '');
  cleaned = cleaned.replace(/\|/g, ' ');
  
  // –ó–∞–º–µ–Ω—è–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã –Ω–∞ –æ–¥–∏–Ω
  cleaned = cleaned.replace(/\s{2,}/g, ' ');
  
  // –£–±–∏—Ä–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫
  cleaned = cleaned.replace(/\n{3,}/g, '\n\n');
  
  // –£–±–∏—Ä–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  cleaned = cleaned.replace(/[\u0000-\u0008\u000B-\u000C\u000E-\u001F\u007F-\u009F]/g, '');
  
  // –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–ø—É—Å–∫–æ–≤
  cleaned = cleaned.replace(/\[–ü–†–û–ü–£–°–ö\]\s*\[–ü–†–û–ü–£–°–ö\]/g, '[–ü–†–û–ü–£–°–ö]');
  cleaned = cleaned.replace(/\s*\[–ü–†–û–ü–£–°–ö\]\s*/g, ' [–ü–†–û–ü–£–°–ö] ');
  
  return cleaned.trim();
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –¥–æ–≥–æ–≤–æ—Ä–æ–≤
function preprocessContract(text: string): string {
  let processed = text;
  
  // –£–±–∏—Ä–∞–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å—Ç–æ—Ä–æ–Ω
  processed = processed.replace(/\*\*–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω\(-–∫–∞\)[^*]+\*\*/g, '');
  processed = processed.replace(/\*(–¥–ª—è —Å–∞–º–æ–∑–∞–Ω—è—Ç—ã—Ö)\*/g, '(–¥–ª—è —Å–∞–º–æ–∑–∞–Ω—è—Ç—ã—Ö)');
  
  // –£–±–∏—Ä–∞–µ–º –∑–≤–µ–∑–¥–æ—á–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  processed = processed.replace(/\*\*/g, '');
  
  // –£–±–∏—Ä–∞–µ–º –Ω–æ–º–µ—Ä–∞ —Ä–∞–∑–¥–µ–ª–æ–≤ –≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–æ–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, ## –∏–ª–∏ ###)
  processed = processed.replace(/^#{1,3}\s+/gm, '');
  
  return processed;
}

// –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞
function createSystemPrompt(meta: { role?: string; description?: string; isScanned?: boolean }) {
  const scanNotice = meta.isScanned
    ? '‚ö†Ô∏è –≠—Ç–æ—Ç —Ç–µ–∫—Å—Ç –ø–æ–ª—É—á–µ–Ω OCR-—Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ–º: –≤–æ–∑–º–æ–∂–Ω—ã –æ—à–∏–±–∫–∏ —Ü–∏—Ñ—Ä, –¥–∞—Ç, –∑–Ω–∞–∫–æ–≤.'
    : '';

  const currentDate = new Date().toISOString().split('T')[0];

  return `–¢—ã ‚Äî —é—Ä–∏—Å—Ç-–ø—Ä–∞–∫—Ç–∏–∫ –ø–æ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º—É –¥–æ–≥–æ–≤–æ—Ä–Ω–æ–º—É –ø—Ä–∞–≤—É (20+ –ª–µ—Ç –æ–ø—ã—Ç–∞).
–¢–≤–æ—è –∑–∞–¥–∞—á–∞: –≥–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ-–ø—Ä–∞–≤–æ–≤–æ–≥–æ –¥–æ–≥–æ–≤–æ—Ä–∞ –¥–ª—è —Ä–æ–ª–∏ ¬´${meta.role ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}¬ª –≤ —Å—Ñ–µ—Ä–µ ¬´${meta.description ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}¬ª.
–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞: ${currentDate}

${scanNotice}

========================  –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø  ========================
1. –ü—Ä–æ—á–∏—Ç–∞–π –í–°–ï –ø—É–Ω–∫—Ç—ã –¥–æ–≥–æ–≤–æ—Ä–∞ (—Ä–∞–∑–º–µ—Ç–∫–∞ <<<DOC>>> —Å–º. –Ω–∏–∂–µ).
2. –°—Å—ã–ª–∞–π—Å—è –¢–û–õ–¨–ö–û –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—É–Ω–∫—Ç—ã (—Ñ–æ—Ä–º–∞—Ç ¬´–ø. 3.4¬ª).
3. –†–∞–∑–Ω–æ–æ–±—Ä–∞–∑—å —Ä–∏—Å–∫–∏: —Ñ–∏–Ω–∞–Ω—Å—ã, —Å—Ä–æ–∫–∏, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å, –ò–°, –ü–î–Ω, —Ñ–æ—Ä—Å-–º–∞–∂–æ—Ä, —Ä–∞—Å—Ç–æ—Ä–∂–µ–Ω–∏–µ, —Å–ø–æ—Ä—ã, –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ.
4. –ï—Å–ª–∏ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è [–ü–†–û–ü–£–°–ö] ‚Äî —É–∫–∞–∂–∏, —á—Ç–æ –ø–æ–ª–µ –Ω–µ–∑–∞–ø–æ–ª–Ω–µ–Ω–æ –∏ —ç—Ç–æ —Ä–∏—Å–∫.
5. –£–∫–∞–∑—ã–≤–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –Ω–æ—Ä–º—ã –ø—Ä–∞–≤–∞ –†–§ (–ø—Ä–∏–º–µ—Ä: ¬´—Å—Ç. 421 –ì–ö –†–§¬ª, ¬´–ø. 3 —Å—Ç. 7 –§–ó-152¬ª).
6. –ü—Ä–æ–≤–µ—Ä—è–π –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—è –º–µ–∂–¥—É —Ä–∞–∑–¥–µ–ª–∞–º–∏ –∏ –æ—Ç—Ä–∞–∂–∞–π –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ä–∏—Å–∫–∏.
7. –û—Ç–º–µ—á–∞–π –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ (–ò–ù–ù, –û–ì–†–ù).
8. –í —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö –∏—Å–ø–æ–ª—å–∑—É–π –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–ª–æ–≥, –∏–∑–±–µ–≥–∞–π —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–π.
9. –¶–∏—Ç–∞—Ç—ã –∏–∑ –¥–æ–≥–æ–≤–æ—Ä–∞ ‚Äî –Ω–µ –¥–ª–∏–Ω–Ω–µ–µ 200 —Å–∏–º–≤–æ–ª–æ–≤.
10. –û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ß–ò–°–¢–´–ú JSON ‚Äî –±–µ–∑ Markdown, –±–µ–∑ –ø—Ä–µ–∞–º–±—É–ª—ã, –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤.

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û:
- –í–°–ï–ì–î–ê –¥–∞–≤–∞–π –ú–ò–ù–ò–ú–£–ú 5 —Ä–∏—Å–∫–æ–≤ –≤ –ö–ê–ñ–î–û–ô –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (critical, moderate, low)
- –í–°–ï–ì–î–ê –¥–∞–≤–∞–π –ú–ò–ù–ò–ú–£–ú 10 —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
- –ï—Å–ª–∏ –≤ –¥–æ–≥–æ–≤–æ—Ä–µ –º–∞–ª–æ –ø—É–Ω–∫—Ç–æ–≤, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –≥–ª—É–±–∂–µ: –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –≤–∞–∂–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π —Ç–æ–∂–µ —Ä–∏—Å–∫
- –ò—â–∏ —Ä–∏—Å–∫–∏ –≤ —Ç–æ–º, —á—Ç–æ –ù–ï –Ω–∞–ø–∏—Å–∞–Ω–æ –≤ –¥–æ–≥–æ–≤–æ—Ä–µ (–æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –≤–∞–∂–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤)

========================  –°–•–ï–ú–ê JSON –û–¢–í–ï–¢–ê  ==============================
{
  "overview":           string,     // 3-5 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π, 400-600 —Å–∏–º–≤.
  "marketingScore":     number,     // 0-10, –Ω–∞—Å–∫–æ–ª—å–∫–æ –¥–æ–≥–æ–≤–æ—Ä ¬´–ø—Ä–æ–¥–∞—é—â–∏–π¬ª
  "risks": {
    "critical":   string[],         // –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û ‚â•5, ‚â•500 —Å–∏–º–≤. –∫–∞–∂–¥—ã–π
    "moderate":   string[],         // –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û ‚â•5, ‚â•500 —Å–∏–º–≤. –∫–∞–∂–¥—ã–π
    "low":        string[]          // –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û ‚â•5, ‚â•500 —Å–∏–º–≤. –∫–∞–∂–¥—ã–π
  },
  "recommendations":    string[],   // –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û ‚â•10, ‚â•300 —Å–∏–º–≤. ¬´–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞–º–µ–Ω–∏—Ç—å...¬ª
  "conclusion":         string,     // –ò—Ç–æ–≥, 250-400 —Å–∏–º–≤.
  "mentionedClauses":   string[],   // –í—Å–µ –Ω–æ–º–µ—Ä–∞ –ø—É–Ω–∫—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —É–ø–æ–º–∏–Ω–∞–ª
  "token_estimate":     number      // –û—Ü–µ–Ω–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã
}

–ó–ê–ü–†–ï–©–ï–ù–û –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç–º–æ–¥–∑–∏ –∏–ª–∏ –º–∞—Ä–∫–µ—Ä—ã —Ç–∏–ø–∞ "üîµPR:" –≤ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö.

========================  –î–û–ì–û–í–û–†  =======================================
<<<DOC>>>
{–¥–æ–≥–æ–≤–æ—Ä –≤—Å—Ç–∞–≤–∏—Ç—Å—è –∑–¥–µ—Å—å}
</DOC>

–í–´–í–ï–î–ò –¢–û–õ–¨–ö–û JSON.`;
}

// –ü—Ä–∏–º–µ—Ä –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è few-shot learning
function getFewShotExample(): string {
  return `{
  "overview": "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–æ–≥–æ–≤–æ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏ –º–µ–∂–¥—É –û–û–û '–ê–ª—å—Ñ–∞' –∏ –ò–ü –ò–≤–∞–Ω–æ–≤. –î–æ–∫—É–º–µ–Ω—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –±–∞–∑–æ–≤—ã–µ —É—Å–ª–æ–≤–∏—è, –Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è –æ–± –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ —Å—Ç–æ—Ä–æ–Ω –∏ –ø–æ—Ä—è–¥–∫–µ –ø—Ä–∏–µ–º–∫–∏ —Ç–æ–≤–∞—Ä–∞. –¢—Ä–µ–±—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –∑–∞—â–∏—Ç—ã –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è.",
  "marketingScore": 3,
  "risks": {
    "critical": [
      "–ø. 4.1: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞, —á—Ç–æ —Å–æ–∑–¥–∞–µ—Ç –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ä–∏—Å–∫–∏. –°–æ–≥–ª–∞—Å–Ω–æ —Å—Ç. 15 –ì–ö –†–§, —É–±—ã—Ç–∫–∏ –≤–∫–ª—é—á–∞—é—Ç —Ä–µ–∞–ª—å–Ω—ã–π —É—â–µ—Ä–± –∏ —É–ø—É—â–µ–Ω–Ω—É—é –≤—ã–≥–æ–¥—É. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–µ–¥–µ–ª –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –≤ —Ä–∞–∑–º–µ—Ä–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–∞—Ä—Ç–∏–∏ —Ç–æ–≤–∞—Ä–∞."
    ],
    "moderate": [
      "–ø. 2.3: –°—Ä–æ–∫ –ø–æ—Å—Ç–∞–≤–∫–∏ —É–∫–∞–∑–∞–Ω –∫–∞–∫ '—Ä–∞–∑—É–º–Ω—ã–π', —á—Ç–æ —Å–æ–∑–¥–∞–µ—Ç –ø—Ä–∞–≤–æ–≤—É—é –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ—Å—Ç—å. –°–æ–≥–ª–∞—Å–Ω–æ —Å—Ç. 314 –ì–ö –†–§, –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∏—Å–ø–æ–ª–Ω–µ–Ω–æ –≤ —Ä–∞–∑—É–º–Ω—ã–π —Å—Ä–æ–∫, –Ω–æ –ª—É—á—à–µ —É–∫–∞–∑–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–∞—Ç—ã."
    ],
    "low": [
      "–ø. 8.1: Email –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ —É–∫–∞–∑–∞–Ω. –í —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ - –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π —Å–≤—è–∑–∏. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å email-–∞–¥—Ä–µ—Å–∞ —Å—Ç–æ—Ä–æ–Ω."
    ]
  },
  "recommendations": [
    "–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞–º–µ–Ω–∏—Ç—å —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫—É –≤ –ø. 4.1 –Ω–∞: '–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –ü–æ—Å—Ç–∞–≤—â–∏–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å—é –Ω–µ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∏–ª–∏ –Ω–µ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞'",
    "üîµPR: –î–æ–±–∞–≤–∏—Ç—å –≤ –ø. 5.1 —Å–∫–∏–¥–∫—É 3% –ø—Ä–∏ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–µ 100% - –ø–æ–≤—ã—Å–∏—Ç –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—è"
  ],
  "conclusion": "–î–æ–≥–æ–≤–æ—Ä —Ç—Ä–µ–±—É–µ—Ç —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –¥–æ—Ä–∞–±–æ—Ç–∫–∏. –ü–æ—Å–ª–µ –≤–Ω–µ—Å–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–æ–∫—É–º–µ–Ω—Ç –±—É–¥–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –ì–ö –†–§ –∏ –∑–∞—â–∏—Ç–∏—Ç –∏–Ω—Ç–µ—Ä–µ—Å—ã –ø–æ–∫—É–ø–∞—Ç–µ–ª—è.",
  "mentionedClauses": ["4.1", "2.3", "8.1", "5.1"],
  "token_estimate": 2500
}`;
}

// YandexGPT –∞–Ω–∞–ª–∏–∑ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π
async function analyzeWithYandexGPT(html: string, meta: { role?: string; description?: string; isScanned?: boolean }) {
  // –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–æ–≥–æ–≤–æ—Ä–æ–≤
  let documentText = html;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –¥–æ–≥–æ–≤–æ—Ä–∞ –∏ –ø—Ä–∏–º–µ–Ω—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—É—é –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫—É
  if (documentText.includes('—Ä–µ–∫–ª–∞–º–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç') || documentText.includes('—Ä–µ–∫–ª–∞–º–Ω—ã–µ —É—Å–ª—É–≥–∏')) {
    console.log('Detected advertising contract, applying special preprocessing...');
    documentText = preprocessContract(documentText);
  }
  
  // –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
  documentText = cleanDocumentText(documentText);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–ª–∏—à–∫–æ–º –ª–∏ –º–Ω–æ–≥–æ –ø—Ä–æ–ø—É—Å–∫–æ–≤ (—à–∞–±–ª–æ–Ω –¥–æ–≥–æ–≤–æ—Ä–∞)
  const placeholderCount = (documentText.match(/\[–ü–†–û–ü–£–°–ö\]/g) || []).length;
  const totalWords = documentText.split(/\s+/).length;
  const placeholderRatio = placeholderCount / Math.max(totalWords * 0.01, 1); // –ø—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–æ–ø—É—Å–∫–æ–≤
  
  if (placeholderRatio > 5) { // –±–æ–ª–µ–µ 5% —Ç–µ–∫—Å—Ç–∞ - –ø—Ä–æ–ø—É—Å–∫–∏
    console.log(`High placeholder ratio (${placeholderRatio.toFixed(1)}%), this is a template`);
    documentText = '–í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ —à–∞–±–ª–æ–Ω –¥–æ–≥–æ–≤–æ—Ä–∞ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º –Ω–µ–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª–µ–π. –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –¥–æ–≥–æ–≤–æ—Ä–∞.\n\n' + documentText;
  }
  
  const MAX_CHARS = 18000; // –û—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–ø–∞—Å –¥–ª—è –ø—Ä–æ–º–ø—Ç–∞
  
  if (documentText.length > MAX_CHARS) {
    console.log(`Document too large (${documentText.length} chars), intelligently truncating...`);
    
    // –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –∫–ª—é—á–µ–≤—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤
    const sections = documentText.split(/(?=(?:\d+\.|[–ê-–Ø][–ê-–Ø\s]{2,}:|–°—Ç–∞—Ç—å—è|–†–∞–∑–¥–µ–ª)\s)/);
    
    if (sections.length > 1) {
      // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã —Ä–∞–∑–¥–µ–ª–æ–≤
      const priorityKeywords = [
        '–ø—Ä–µ–¥–º–µ—Ç', '—Ü–µ–Ω–∞', '–æ–ø–ª–∞—Ç–∞', '–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å', '—à—Ç—Ä–∞—Ñ', '–Ω–µ—É—Å—Ç–æ–π–∫',
        '—Å—Ä–æ–∫', '—Ä–∞—Å—Ç–æ—Ä–∂–µ–Ω–∏–µ', '–∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω', '–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω', '—Ñ–æ—Ä—Å-–º–∞–∂–æ—Ä',
        '—Å–ø–æ—Ä—ã', '–∑–∞–∫–ª—é—á–∏—Ç–µ–ª—å–Ω', '—Ä–µ–∫–≤–∏–∑–∏—Ç—ã'
      ];
      
      // –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–∞–∑–¥–µ–ª—ã –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É
      const prioritySections = sections.filter(s => 
        priorityKeywords.some(keyword => s.toLowerCase().includes(keyword))
      );
      
      const beginning = sections.slice(0, 2).join('');
      const priority = prioritySections.slice(0, 5).join('');
      const end = sections.slice(-1).join('');
      
      documentText = beginning + '\n\n[...—Å–æ–∫—Ä–∞—â–µ–Ω–æ...]\n\n' + priority + '\n\n[...—Å–æ–∫—Ä–∞—â–µ–Ω–æ...]\n\n' + end;
    } else {
      // –ü—Ä–æ—Å—Ç–æ–µ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ
      const beginning = documentText.substring(0, 6000);
      const middle = documentText.substring(documentText.length / 2 - 3000, documentText.length / 2 + 3000);
      const end = documentText.substring(documentText.length - 6000);
      documentText = beginning + '\n\n[...—Å–æ–∫—Ä–∞—â–µ–Ω–æ...]\n\n' + middle + '\n\n[...—Å–æ–∫—Ä–∞—â–µ–Ω–æ...]\n\n' + end;
    }
  }

  // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–º–ø—Ç —Å –¥–æ–∫—É–º–µ–Ω—Ç–æ–º
  const systemPrompt = createSystemPrompt(meta);
  const documentPrompt = systemPrompt.replace('{–¥–æ–≥–æ–≤–æ—Ä –≤—Å—Ç–∞–≤–∏—Ç—Å—è –∑–¥–µ—Å—å}', documentText);
  
  console.log('Sending to YandexGPT:', {
    documentSize: documentText.length,
    placeholderCount,
    placeholderRatio: placeholderRatio.toFixed(1) + '%',
    promptSize: documentPrompt.length
  });

  // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º few-shot –ø—Ä–∏–º–µ—Ä
  const fewShotExample = getFewShotExample();

  const requestBody = {
    modelUri: `gpt://${process.env.YANDEX_FOLDER_ID}/yandexgpt-lite`,
    completionOptions: {
      stream: false,
      temperature: 0.05, // –°–Ω–∏–∂–∞–µ–º –¥–ª—è –¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç–∏
      maxTokens: 2500
    },
    messages: [
      {
        role: 'system',
        text: '–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É –¥–æ–≥–æ–≤–æ—Ä–æ–≤. –í—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –≤–∞–ª–∏–¥–Ω—ã–º JSON –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.'
      },
      {
        role: 'user',
        text: '–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞ –∏ –≤—ã–≤–µ–¥–∏ JSON:'
      },
      {
        role: 'assistant',
        text: fewShotExample
      },
      {
        role: 'user', 
        text: documentPrompt
      }
    ]
  };

  try {
    const response = await fetch('https://llm.api.cloud.yandex.net/foundationModels/v1/completion', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Api-Key ${process.env.YANDEX_API_KEY}`,
        'x-folder-id': process.env.YANDEX_FOLDER_ID!
      },
      body: JSON.stringify(requestBody)
    });

    if (!response.ok) {
      const errorText = await response.text();
      console.error('YandexGPT API error:', response.status, errorText);
      
      if (response.status === 429) {
        throw new Error('–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ YandexGPT. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      } else if (response.status === 401) {
        throw new Error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ YandexGPT. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á.');
      } else if (response.status === 400) {
        console.error('Bad request, prompt size:', documentPrompt.length);
        throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ YandexGPT (–≤–æ–∑–º–æ–∂–Ω–æ, —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π –¥–æ–∫—É–º–µ–Ω—Ç)');
      }
      
      throw new Error(`YandexGPT API error: ${response.status}`);
    }

    const data = await response.json();
    console.log('YandexGPT response received:', {
      totalTokens: data.result?.usage?.totalTokens,
      promptTokens: data.result?.usage?.promptTokens,
      completionTokens: data.result?.usage?.completionTokens
    });
    
    if (!data.result?.alternatives?.[0]?.message?.text) {
      console.error('Invalid YandexGPT response structure:', JSON.stringify(data));
      throw new Error('YandexGPT –≤–µ—Ä–Ω—É–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç');
    }
    
    let analysisText = data.result.alternatives[0].message.text;
    console.log('Analysis text length:', analysisText.length);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç–∫–∞–∑ YandexGPT
    const rejectionPhrases = [
      '–≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –µ—Å—Ç—å –º–Ω–æ–≥–æ',
      '–ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, —á—Ç–æ –Ω–∞—à–ª–æ—Å—å',
      'ya.ru',
      'yandex.ru/search',
      '–Ω–µ –º–æ–≥—É –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å',
      '–Ω–µ –º–æ–≥—É –≤—ã–ø–æ–ª–Ω–∏—Ç—å',
      '–æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É',
      '–Ω–µ –º–æ–≥—É –¥–∞—Ç—å —é—Ä–∏–¥–∏—á–µ—Å–∫—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é'
    ];
    
    const lowerText = analysisText.toLowerCase();
    const isRejection = rejectionPhrases.some(phrase => lowerText.includes(phrase)) || 
                       analysisText.length < 200;
    
    if (isRejection) {
      console.log('YandexGPT rejection detected');
      throw new Error('YandexGPT –Ω–µ —Å–º–æ–≥ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç');
    }
    
    // –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∏ –ø–æ–∏—Å–∫ JSON
    // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –¥–æ –ø–µ—Ä–≤–æ–π {
    const jsonStart = analysisText.indexOf('{');
    if (jsonStart > 0) {
      analysisText = analysisText.substring(jsonStart);
    }
    
    // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π }
    const jsonEnd = analysisText.lastIndexOf('}');
    if (jsonEnd > 0 && jsonEnd < analysisText.length - 1) {
      analysisText = analysisText.substring(0, jsonEnd + 1);
    }
    
    // –£–±–∏—Ä–∞–µ–º markdown –µ—Å–ª–∏ –æ—Å—Ç–∞–ª—Å—è
    analysisText = analysisText.replace(/```json?\s*/gi, '').replace(/```\s*/gi, '');
    
    try {
      const result = JSON.parse(analysisText);
      
      // –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
      const requiredFields = ['overview', 'risks', 'recommendations', 'conclusion'];
      const missingFields = requiredFields.filter(field => !result[field]);
      
      if (missingFields.length > 0) {
        console.error('Missing required fields:', missingFields);
        throw new Error(`–ù–µ–ø–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –æ—Ç YandexGPT: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è ${missingFields.join(', ')}`);
      }
      
      // –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã risks
      if (!result.risks.critical || !result.risks.moderate || !result.risks.low) {
        throw new Error('–ù–µ–ø–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–∏—Å–∫–æ–≤ –≤ –æ—Ç–≤–µ—Ç–µ YandexGPT');
      }
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
      if (result.risks.critical.length < 5) {
        console.error(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–∏—Å–∫–æ–≤: ${result.risks.critical.length}, —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 5`);
        throw new Error('YandexGPT –≤–µ—Ä–Ω—É–ª –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–∏—Å–∫–æ–≤ (–º–∏–Ω–∏–º—É–º 5)');
      }
      if (result.risks.moderate.length < 5) {
        console.error(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É–º–µ—Ä–µ–Ω–Ω—ã—Ö —Ä–∏—Å–∫–æ–≤: ${result.risks.moderate.length}, —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 5`);
        throw new Error('YandexGPT –≤–µ—Ä–Ω—É–ª –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É–º–µ—Ä–µ–Ω–Ω—ã—Ö —Ä–∏—Å–∫–æ–≤ (–º–∏–Ω–∏–º—É–º 5)');
      }
      if (result.risks.low.length < 5) {
        console.error(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∏–∑–∫–∏—Ö —Ä–∏—Å–∫–æ–≤: ${result.risks.low.length}, —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 5`);
        throw new Error('YandexGPT –≤–µ—Ä–Ω—É–ª –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∏–∑–∫–∏—Ö —Ä–∏—Å–∫–æ–≤ (–º–∏–Ω–∏–º—É–º 5)');
      }
      if (result.recommendations.length < 10) {
        console.error(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: ${result.recommendations.length}, —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 10`);
        throw new Error('YandexGPT –≤–µ—Ä–Ω—É–ª –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π (–º–∏–Ω–∏–º—É–º 10)');
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–æ–ª—è –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
      result.marketingScore = result.marketingScore ?? 5;
      result.mentionedClauses = result.mentionedClauses ?? [];
      result.token_estimate = result.token_estimate ?? data.result.usage?.totalTokens ?? 2000;
      
      console.log('YandexGPT analysis completed successfully:', {
        risksCount: {
          critical: result.risks.critical.length,
          moderate: result.risks.moderate.length,
          low: result.risks.low.length
        },
        recommendationsCount: result.recommendations.length,
        marketingScore: result.marketingScore,
        mentionedClauses: result.mentionedClauses.length
      });
      
      return result;
      
    } catch (parseError) {
      console.error('JSON parse error:', parseError);
      console.error('Failed to parse text:', analysisText.substring(0, 500) + '...');
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å JSON –æ—Ç–≤–µ—Ç –æ—Ç YandexGPT');
    }
    
  } catch (error) {
    console.error('YandexGPT request failed:', error);
    throw error;
  }
}

// –£–ª—É—á—à–µ–Ω–Ω—ã–µ –º–æ–∫-–¥–∞–Ω–Ω—ã–µ —Å –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–æ–π —Å–æ—Å—Ç–∞–≤–ª—è—é—â–µ–π
function generateMockAnalysis(role: string, description: string, filename: string, isScanned: boolean = false) {
  const scanWarning = isScanned 
    ? " –î–æ–∫—É–º–µ–Ω—Ç –±—ã–ª —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω –∏–∑ —Å–∫–∞–Ω–∞, –≤–æ–∑–º–æ–∂–Ω—ã –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç–∏ –≤ —Ç–µ–∫—Å—Ç–µ." 
    : ""

  return {
    overview: `–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–æ–≥–æ–≤–æ—Ä "${filename}" —Å –ø–æ–∑–∏—Ü–∏–∏ —Ä–æ–ª–∏ "${role}" –≤ —Å—Ñ–µ—Ä–µ "${description}". –î–æ–∫—É–º–µ–Ω—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —É—Å–ª–æ–≤–∏—è —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Ä–∏—Å–∫–∞–º–∏, —Ç—Ä–µ–±—É—é—â–∏–º–∏ –≤–Ω–∏–º–∞–Ω–∏—è. –û–±—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞ - —É–º–µ—Ä–µ–Ω–Ω—ã–π. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ–µ –∏–∑—É—á–µ–Ω–∏–µ —É—Å–ª–æ–≤–∏–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –ø–æ—Ä—è–¥–∫–∞ —Ä–∞—Å—Ç–æ—Ä–∂–µ–Ω–∏—è.${scanWarning}`,
    marketingScore: 4,
    risks: {
      critical: [
        "–ø. 5.1: –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å —Å—Ç–æ—Ä–æ–Ω—ã –∑–∞ —É–±—ã—Ç–∫–∏ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º –ø–æ—Ç–µ—Ä—è–º. –°–æ–≥–ª–∞—Å–Ω–æ —Å—Ç. 15 –ì–ö –†–§ —É–±—ã—Ç–∫–∏ –≤–∫–ª—é—á–∞—é—Ç –∫–∞–∫ —Ä–µ–∞–ª—å–Ω—ã–π —É—â–µ—Ä–±, —Ç–∞–∫ –∏ —É–ø—É—â–µ–Ω–Ω—É—é –≤—ã–≥–æ–¥—É. –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ä–∏—Å–∫–∏ –¥–ª—è —Å—Ç–æ—Ä–æ–Ω—ã. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–µ–¥–µ–ª –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –≤ —Ä–∞–∑–º–µ—Ä–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ–≥–æ–≤–æ—Ä–∞ –∏–ª–∏ –∏–Ω–æ–π —Ä–∞–∑—É–º–Ω–æ–π —Å—É–º–º—ã.",
        "–ø. 7.3: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ —Ä–∞–∑–º–µ—Ä—É –Ω–µ—É—Å—Ç–æ–π–∫–∏, —á—Ç–æ —Å–æ–∑–¥–∞–µ—Ç —Ä–∏—Å–∫ —á—Ä–µ–∑–º–µ—Ä–Ω—ã—Ö —à—Ç—Ä–∞—Ñ–æ–≤. –í —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å–æ —Å—Ç. 333 –ì–ö –†–§ —Å—É–¥ –º–æ–∂–µ—Ç —É–º–µ–Ω—å—à–∏—Ç—å –Ω–µ—É—Å—Ç–æ–π–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ —è–≤–Ω–æ –Ω–µ—Å–æ—Ä–∞–∑–º–µ—Ä–Ω–∞ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è–º –Ω–∞—Ä—É—à–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞. –û–¥–Ω–∞–∫–æ –ª—É—á—à–µ –∑–∞—Ä–∞–Ω–µ–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞–∑—É–º–Ω—ã–µ –ø—Ä–µ–¥–µ–ª—ã –Ω–µ—É—Å—Ç–æ–π–∫–∏ –≤ –¥–æ–≥–æ–≤–æ—Ä–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–µ –±–æ–ª–µ–µ 10% –æ—Ç —Å—É–º–º—ã –¥–æ–≥–æ–≤–æ—Ä–∞.",
        "–ø. 9.2: –û–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–π –æ—Ç–∫–∞–∑ –æ—Ç –¥–æ–≥–æ–≤–æ—Ä–∞ –±–µ–∑ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –º–æ–∂–µ—Ç –Ω–∞—Ä—É—à–∏—Ç—å –ø–ª–∞–Ω—ã –±–∏–∑–Ω–µ—Å–∞. –ü–æ –æ–±—â–µ–º—É –ø—Ä–∞–≤–∏–ª—É —Å—Ç. 310 –ì–ö –†–§ –æ–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–π –æ—Ç–∫–∞–∑ –æ—Ç –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –Ω–µ –¥–æ–ø—É—Å–∫–∞–µ—Ç—Å—è, –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º —Å–ª—É—á–∞–µ–≤, –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –∑–∞–∫–æ–Ω–æ–º –∏–ª–∏ –¥–æ–≥–æ–≤–æ—Ä–æ–º. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —á–µ—Ç–∫–æ –ø—Ä–æ–ø–∏—Å–∞—Ç—å –æ—Å–Ω–æ–≤–∞–Ω–∏—è –∏ –ø—Ä–æ—Ü–µ–¥—É—Ä—É –æ–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–µ–≥–æ –æ—Ç–∫–∞–∑–∞.",
        "–ø. 3.4: –ù–µ—á–µ—Ç–∫–∏–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏ –æ–±—ä–µ–º–∞ —Ä–∞–±–æ—Ç –º–æ–≥—É—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ —Å–ø–æ—Ä–∞–º –æ–± –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–∏. –°–æ–≥–ª–∞—Å–Ω–æ —Å—Ç. 432 –ì–ö –†–§ –¥–æ–≥–æ–≤–æ—Ä —Å—á–∏—Ç–∞–µ—Ç—Å—è –∑–∞–∫–ª—é—á–µ–Ω–Ω—ã–º, –µ—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ –ø–æ –≤—Å–µ–º —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–º —É—Å–ª–æ–≤–∏—è–º. –î–ª—è –¥–æ–≥–æ–≤–æ—Ä–∞ –ø–æ–¥—Ä—è–¥–∞ —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–º —è–≤–ª—è–µ—Ç—Å—è —É—Å–ª–æ–≤–∏–µ –æ –ø—Ä–µ–¥–º–µ—Ç–µ. –†–∞—Å–ø–ª—ã–≤—á–∞—Ç—ã–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏ —Å–æ–∑–¥–∞—é—Ç —Ä–∏—Å–∫ –ø—Ä–∏–∑–Ω–∞–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞ –Ω–µ–∑–∞–∫–ª—é—á–µ–Ω–Ω—ã–º.",
        "–ø. 11.5: –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —É—Å–ª–æ–≤–∏–π –æ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ —É—Ç–µ—á–∫–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –í —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–º –∑–∞–∫–æ–Ω–æ–º '–û –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π —Ç–∞–π–Ω–µ' –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–µ–∂–∏–º –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è –∑–∞—â–∏—Ç—ã –≤–∞–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤–∫–ª—é—á–∏—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª –æ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —Å—Ä–æ–∫–æ–≤ –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏."
      ],
      moderate: [
        "–ø. 4.2: –°—Ä–æ–∫–∏ –æ–ø–ª–∞—Ç—ã –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –∑–∞—â–∏—Ç—ã –æ—Ç –∑–∞–¥–µ—Ä–∂–µ–∫ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –±–∞–Ω–∫–æ–≤. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å, —á—Ç–æ –¥–∞—Ç–æ–π –æ–ø–ª–∞—Ç—ã —Å—á–∏—Ç–∞–µ—Ç—Å—è –¥–∞—Ç–∞ —Å–ø–∏—Å–∞–Ω–∏—è –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ —Å —Ä–∞—Å—á–µ—Ç–Ω–æ–≥–æ —Å—á–µ—Ç–∞ –ø–ª–∞—Ç–µ–ª—å—â–∏–∫–∞, –∞ –Ω–µ –¥–∞—Ç–∞ –∏—Ö –∑–∞—á–∏—Å–ª–µ–Ω–∏—è –Ω–∞ —Å—á–µ—Ç –ø–æ–ª—É—á–∞—Ç–µ–ª—è. –≠—Ç–æ –∑–∞—â–∏—Ç–∏—Ç –ø–ª–∞—Ç–µ–ª—å—â–∏–∫–∞ –æ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –∑–∞–¥–µ—Ä–∂–∫–∏ –≤ –±–∞–Ω–∫–æ–≤—Å–∫–æ–π —Å–∏—Å—Ç–µ–º–µ.",
        "–ø. 6.1: –§–æ—Ä—Å-–º–∞–∂–æ—Ä–Ω—ã–µ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã —Å–ª–∏—à–∫–æ–º —É–∑–∫–æ. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–∞—Å—à–∏—Ä–∏—Ç—å –ø–µ—Ä–µ—á–µ–Ω—å –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø—Ä–∞–∫—Ç–∏–∫–æ–π –∏ –≤–∫–ª—é—á–∏—Ç—å —ç–ø–∏–¥–µ–º–∏–∏, –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞, –∞–∫—Ç—ã –æ—Ä–≥–∞–Ω–æ–≤ –≤–ª–∞—Å—Ç–∏. –¢–∞–∫–∂–µ –≤–∞–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ü–µ–¥—É—Ä—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ñ–æ—Ä—Å-–º–∞–∂–æ—Ä–µ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ç–∞–∫–∏—Ö –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤.",
        "–ø. 8.5: –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞ —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏. –°–ª–µ–¥—É–µ—Ç —É–∫–∞–∑–∞—Ç—å, —á—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Å—Ç—É–ø–∞—é—Ç –≤ —Å–∏–ª—É —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –æ–±–µ–∏–º–∏ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏. –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–±–º–µ–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ –ø–æ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç–µ —Å –ø–æ—Å–ª–µ–¥—É—é—â–∏–º –æ–±–º–µ–Ω–æ–º –æ—Ä–∏–≥–∏–Ω–∞–ª–∞–º–∏.",
        "–ø. 2.3: –£—Å–ª–æ–≤–∏—è –ø—Ä–∏–µ–º–∫–∏ —Ä–∞–±–æ—Ç –Ω–µ –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –¥–æ–ª–∂–Ω—ã–º –æ–±—Ä–∞–∑–æ–º. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å—Ä–æ–∫–∏ –¥–ª—è –ø—Ä–∏–µ–º–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 5 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π), –ø—Ä–æ—Ü–µ–¥—É—Ä—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –º–æ—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ—Ç–∫–∞–∑–∞, –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è —É–∫–ª–æ–Ω–µ–Ω–∏—è –æ—Ç –ø—Ä–∏–µ–º–∫–∏. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å —Å–ø–æ—Ä–æ–≤ –æ –∫–∞—á–µ—Å—Ç–≤–µ –∏ —Å—Ä–æ–∫–∞—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞–±–æ—Ç.",
        "–ø. 10.3: –ü–æ—Ä—è–¥–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Å–ø–æ—Ä–æ–≤ –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –º–µ–¥–∏–∞—Ü–∏–∏. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤–∫–ª—é—á–∏—Ç—å –ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –¥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ —Å—É–¥ —Å—Ç–æ—Ä–æ–Ω—ã –ø—Ä–æ–≤–æ–¥—è—Ç –ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ã, –∞ –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Å–æ–≥–ª–∞—Å–∏—è –º–æ–≥—É—Ç –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –º–µ–¥–∏–∞—Ç–æ—Ä—É. –≠—Ç–æ –º–æ–∂–µ—Ç —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –≤—Ä–µ–º—è –∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤."
      ],
      low: [
        "–ø. 10.1: –£–∫–∞–∑–∞–Ω –Ω–µ–ø–æ–ª–Ω—ã–π –ø–æ—á—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å –æ–¥–Ω–æ–π –∏–∑ —Å—Ç–æ—Ä–æ–Ω, –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ò–ù–ù. –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø–æ—á—Ç–æ–≤–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –∑–∞–¥–µ—Ä–∂–∫–∞–º –≤ –¥–æ—Å—Ç–∞–≤–∫–µ –∫–æ—Ä—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ü–∏–∏. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—ã–µ –ø–æ—á—Ç–æ–≤—ã–µ –∞–¥—Ä–µ—Å–∞ —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏ –∏ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã (–û–ì–†–ù, –ò–ù–ù, –ö–ü–ü) –¥–ª—è –æ–±–µ–∏—Ö —Å—Ç–æ—Ä–æ–Ω.",
        "–ø. 1.2: –¢–µ—Ä–º–∏–Ω—ã –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–ª—é—á–µ–≤—ã—Ö –ø–æ–Ω—è—Ç–∏–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –≤ –¥–æ–≥–æ–≤–æ—Ä–µ, —Ç–∞–∫–∏—Ö –∫–∞–∫ '—Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å', '–æ—Ç—á–µ—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥', '–∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å —Ä–∞–∑–Ω–æ—á—Ç–µ–Ω–∏–π.",
        "–ø. 11.3: –°–ø–æ—Å–æ–± —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ –≤–∫–ª—é—á–∞–µ—Ç —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É. –í —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ —è–≤–ª—è–µ—Ç—Å—è –±—ã—Å—Ç—Ä—ã–º –∏ –Ω–∞–¥–µ–∂–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤–∫–ª—é—á–∏—Ç—å email –∫–∞–∫ —Ä–∞–≤–Ω–æ–ø—Ä–∞–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∞–¥—Ä–µ—Å–æ–≤ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã —Å—Ç–æ—Ä–æ–Ω.",
        "–ø. 12.1: –°—Ä–æ–∫ —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–µ —É–∫–∞–∑–∞–Ω. –í —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –Ω–∞–ª–æ–≥–æ–≤–æ–≥–æ –∏ –±—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–æ–≥–æ —É—á–µ—Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ä–æ–∫ —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ –¥–æ–≥–æ–≤–æ—Ä—É –Ω–µ –º–µ–Ω–µ–µ 5 –ª–µ—Ç —Å –º–æ–º–µ–Ω—Ç–∞ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤.",
        "–ø. 13.2: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —É–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ –ø—Ä–∏–º–µ–Ω–∏–º–æ–µ –ø—Ä–∞–≤–æ. –•–æ—Ç—è –¥–æ–≥–æ–≤–æ—Ä –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –º–µ–∂–¥—É —Ä–æ—Å—Å–∏–π—Å–∫–∏–º–∏ –ª–∏—Ü–∞–º–∏, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —è–≤–Ω–æ —É–∫–∞–∑–∞—Ç—å, —á—Ç–æ –∫ –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º —Å—Ç–æ—Ä–æ–Ω –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –ø—Ä–∞–≤–æ –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏. –≠—Ç–æ –∏—Å–∫–ª—é—á–∏—Ç –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–ø–æ—Ä—ã –æ –ø—Ä–∏–º–µ–Ω–∏–º–æ–º –ø—Ä–∞–≤–µ."
      ]
    },
    recommendations: [
      "–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞–º–µ–Ω–∏—Ç—å —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫—É –≤ –ø. 5.1 –Ω–∞: '–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∫–∞–∂–¥–æ–π –∏–∑ –°—Ç–æ—Ä–æ–Ω –ø–æ –Ω–∞—Å—Ç–æ—è—â–µ–º—É –î–æ–≥–æ–≤–æ—Ä—É –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç—Å—è –≤–æ–∑–º–µ—â–µ–Ω–∏–µ–º —Ä–µ–∞–ª—å–Ω–æ–≥–æ —É—â–µ—Ä–±–∞ –∏ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –î–æ–≥–æ–≤–æ—Ä–∞. –£–ø—É—â–µ–Ω–Ω–∞—è –≤—ã–≥–æ–¥–∞ –≤–æ–∑–º–µ—â–µ–Ω–∏—é –Ω–µ –ø–æ–¥–ª–µ–∂–∏—Ç.'",
      "–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–æ–±–∞–≤–∏—Ç—å –≤ –ø. 7.3: '–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –Ω–µ—É—Å—Ç–æ–π–∫–∏ (–ø–µ–Ω–∏, —à—Ç—Ä–∞—Ñ–∞) –ø–æ –Ω–∞—Å—Ç–æ—è—â–µ–º—É –î–æ–≥–æ–≤–æ—Ä—É –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 10% –æ—Ç –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –î–æ–≥–æ–≤–æ—Ä–∞. –ù–µ—É—Å—Ç–æ–π–∫–∞ –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –∑–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –ø—Ä–æ—Å—Ä–æ—á–∫–∏ –≤ —Ä–∞–∑–º–µ—Ä–µ 0,1% –æ—Ç —Å—É–º–º—ã –Ω–µ–∏—Å–ø–æ–ª–Ω–µ–Ω–Ω–æ–≥–æ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞.'",
      "–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç—å –ø. 9.2 —Å–ª–µ–¥—É—é—â–∏–º: '–°—Ç–æ—Ä–æ–Ω–∞, –Ω–∞–º–µ—Ä–µ–≤–∞—é—â–∞—è—Å—è —Ä–∞—Å—Ç–æ—Ä–≥–Ω—É—Ç—å –î–æ–≥–æ–≤–æ—Ä –≤ –æ–¥–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–µ–º –ø–æ—Ä—è–¥–∫–µ, –æ–±—è–∑–∞–Ω–∞ –ø–∏—Å—å–º–µ–Ω–Ω–æ —É–≤–µ–¥–æ–º–∏—Ç—å –¥—Ä—É–≥—É—é –°—Ç–æ—Ä–æ–Ω—É –Ω–µ –º–µ–Ω–µ–µ —á–µ–º –∑–∞ 30 –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö –¥–Ω–µ–π –¥–æ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–æ–π –¥–∞—Ç—ã —Ä–∞—Å—Ç–æ—Ä–∂–µ–Ω–∏—è —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –æ—Å–Ω–æ–≤–∞–Ω–∏–π –¥–ª—è —Ä–∞—Å—Ç–æ—Ä–∂–µ–Ω–∏—è.'",
      "–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏–∑–º–µ–Ω–∏—Ç—å –ø. 3.4 –Ω–∞: '–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –æ–±—è–∑—É–µ—Ç—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ —Ä–∞–±–æ—Ç—ã: [–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø–µ—Ä–µ—á–µ–Ω—å —Ä–∞–±–æ—Ç —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –æ–±—ä–µ–º–æ–≤, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∏ —Å—Ä–æ–∫–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ —ç—Ç–∞–ø–∞]. –ü–æ–¥—Ä–æ–±–Ω–æ–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–æ –≤ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ ‚Ññ1 –∫ –Ω–∞—Å—Ç–æ—è—â–µ–º—É –î–æ–≥–æ–≤–æ—Ä—É.'",
      "–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–æ–±–∞–≤–∏—Ç—å –≤ –ø. 4.1 —É—Å–ª–æ–≤–∏–µ –æ —Å–∫–∏–¥–∫–µ 5% –ø—Ä–∏ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–µ 100% - —ç—Ç–æ –ø–æ–≤—ã—Å–∏—Ç –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞ –∏ —É—Å–∫–æ—Ä–∏—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤.",
      "–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∑–∞–º–µ–Ω–∏—Ç—å —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫—É –≤ –ø. 4.2 –Ω–∞: '–û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 5 (–ø—è—Ç–∏) –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –¥–Ω–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è –∞–∫—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç. –î–∞—Ç–æ–π –æ–ø–ª–∞—Ç—ã —Å—á–∏—Ç–∞–µ—Ç—Å—è –¥–∞—Ç–∞ —Å–ø–∏—Å–∞–Ω–∏—è –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ —Å —Ä–∞—Å—á–µ—Ç–Ω–æ–≥–æ —Å—á–µ—Ç–∞ –ó–∞–∫–∞–∑—á–∏–∫–∞.'",
      "–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç—å –ø. 6.1: '–ö –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞–º –Ω–µ–ø—Ä–µ–æ–¥–æ–ª–∏–º–æ–π —Å–∏–ª—ã –æ—Ç–Ω–æ—Å—è—Ç—Å—è: —Å—Ç–∏—Ö–∏–π–Ω—ã–µ –±–µ–¥—Å—Ç–≤–∏—è, –≤–æ–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, —ç–ø–∏–¥–µ–º–∏–∏, –∑–∞–±–∞—Å—Ç–æ–≤–∫–∏, –ø—Ä–∏–Ω—è—Ç–∏–µ –æ—Ä–≥–∞–Ω–∞–º–∏ –≤–ª–∞—Å—Ç–∏ –∞–∫—Ç–æ–≤, –ø—Ä–µ–ø—è—Ç—Å—Ç–≤—É—é—â–∏—Ö –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—é –î–æ–≥–æ–≤–æ—Ä–∞. –°—Ç–æ—Ä–æ–Ω–∞, —Å—Å—ã–ª–∞—é—â–∞—è—Å—è –Ω–∞ —Ñ–æ—Ä—Å-–º–∞–∂–æ—Ä, –æ–±—è–∑–∞–Ω–∞ —É–≤–µ–¥–æ–º–∏—Ç—å –¥—Ä—É–≥—É—é –°—Ç–æ—Ä–æ–Ω—É –≤ —Ç–µ—á–µ–Ω–∏–µ 3 –¥–Ω–µ–π.'",
      "–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∫–ª—é—á–∏—Ç—å –≤ –ø. 2.5 –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π —Å—Ä–æ–∫ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç—ã 12 –º–µ—Å—è—Ü–µ–≤ - —ç—Ç–æ —Å–æ–∑–¥–∞—Å—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –¥–æ–≤–µ—Ä–∏–µ –∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é –∏ –≤—ã–¥–µ–ª–∏—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å—Ä–µ–¥–∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤.",
      "–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏–∑–º–µ–Ω–∏—Ç—å –ø. 8.5 –Ω–∞: '–í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∫ –Ω–∞—Å—Ç–æ—è—â–µ–º—É –î–æ–≥–æ–≤–æ—Ä—É –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ –∏—Ö —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –≤ –ø–∏—Å—å–º–µ–Ω–Ω–æ–π —Ñ–æ—Ä–º–µ –∏ –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è —É–ø–æ–ª–Ω–æ–º–æ—á–µ–Ω–Ω—ã–º–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è–º–∏ –°—Ç–æ—Ä–æ–Ω.'",
      "–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç—å –ø. 2.3: '–ü—Ä–∏–µ–º–∫–∞ —Ä–∞–±–æ—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 5 (–ø—è—Ç–∏) —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏.'",
      "–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–æ–±–∞–≤–∏—Ç—å –≤ –ø. 10.1 –ø–æ–ª–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã: '–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å: [–∏–Ω–¥–µ–∫—Å], [–æ–±–ª–∞—Å—Ç—å], [–≥–æ—Ä–æ–¥], [—É–ª–∏—Ü–∞], [–¥–æ–º], [–æ—Ñ–∏—Å]. –û–ì–†–ù: [–Ω–æ–º–µ—Ä], –ò–ù–ù/–ö–ü–ü: [–Ω–æ–º–µ—Ä–∞].'",
      "–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–æ–±–∞–≤–∏—Ç—å –≤ –ø. 5.3 –±–æ–Ω—É—Å–Ω—É—é —Å–∏—Å—Ç–µ–º—É –∑–∞ –¥–æ—Å—Ä–æ—á–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç - –ø—Ä–µ–º–∏—è 2% –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∑–∞ –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é –¥–æ—Å—Ä–æ—á–Ω–æ–π —Å–¥–∞—á–∏ (–º–∞–∫—Å–∏–º—É–º 10%)."
    ],
    conclusion: `–î–æ–≥–æ–≤–æ—Ä –≤ —Ü–µ–ª–æ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –†–§, –æ–¥–Ω–∞–∫–æ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä—è–¥ —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ä–∏—Å–∫–æ–≤ –∏ –∏–º–µ–µ—Ç –Ω–∏–∑–∫–∏–π –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª (–æ—Ü–µ–Ω–∫–∞ ${4}/10). –ü—Ä–∏ –≤–Ω–µ—Å–µ–Ω–∏–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–æ–≥–æ–≤–æ—Ä –±—É–¥–µ—Ç –±–æ–ª–µ–µ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º, –∑–∞—â–∏—Ç–∏—Ç –∏–Ω—Ç–µ—Ä–µ—Å—ã —Å—Ç–æ—Ä–æ–Ω—ã –≤ —Ä–æ–ª–∏ "${role}" –∏ —Å—Ç–∞–Ω–µ—Ç –±–æ–ª–µ–µ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º –¥–ª—è –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞.`,
    mentionedClauses: ["5.1", "7.3", "9.2", "3.4", "11.5", "4.2", "6.1", "8.5", "2.3", "10.3", "10.1", "1.2", "11.3", "12.1", "13.2", "4.1", "2.5", "5.3"],
    token_estimate: 2800
  }
}

export async function POST(req: NextRequest) {
  try {
    const session = await getServerSession(authOptions)
    if (!session?.user?.id) {
      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 })
    }

    const { contractId } = await req.json()
    if (!contractId) {
      return NextResponse.json({ error: 'Contract ID required' }, { status: 400 })
    }

    const contract = await prisma.contract.findFirst({
      where: { id: contractId, userId: session.user.id },
      include: {
        user: {
          select: {
            email: true,
            settings: true
          }
        }
      }
    })

    if (!contract) {
      return NextResponse.json({ error: 'Contract not found' }, { status: 404 })
    }

    await prisma.contract.update({
      where: { id: contractId },
      data: { status: 'processing' }
    })

    let analysisStatus: 'done' | 'error' = 'done'

    try {
      // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª
      const filePath = join(UPLOAD_DIR, contract.path!)
      const buffer = await readFile(filePath)
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
      const fileExtension = contract.filename?.split('.').pop()?.toLowerCase()
      let mimeType = 'application/octet-stream'
      
      switch (fileExtension) {
        case 'doc':
          mimeType = 'application/msword'
          break
        case 'docx':
          mimeType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'
          break
        case 'pdf':
          mimeType = 'application/pdf'
          break
      }
      
      console.log('Processing file:', contract.filename, 'with type:', mimeType)
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–µ—Ä
      const parsedDocument = await parseDocument(buffer, mimeType)
      
      console.log('Document parsed:', {
        textLength: parsedDocument.text.length,
        htmlLength: parsedDocument.html.length,
        pageCount: parsedDocument.pageCount,
        isScanned: parsedDocument.isScanned
      })

      let result: any
      let provider = 'mock'

      // –ü—Ä–æ–±—É–µ–º YandexGPT
      if (process.env.YANDEX_API_KEY && process.env.YANDEX_FOLDER_ID) {
        try {
          console.log('Using YandexGPT...')
          result = await analyzeWithYandexGPT(parsedDocument.html, {
            role: contract.role,
            description: contract.description,
            isScanned: parsedDocument.isScanned
          })
          provider = 'yandex'
          console.log('YandexGPT analysis success!')
        } catch (yandexError) {
          console.error('YandexGPT failed, falling back to mock:', yandexError)
          result = generateMockAnalysis(
            contract.role || '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
            contract.description || '–ù–µ —É–∫–∞–∑–∞–Ω–æ', 
            contract.filename || '–¥–æ–∫—É–º–µ–Ω—Ç',
            parsedDocument.isScanned || false
          )
          provider = 'mock_fallback'
        }
      } else {
        console.log('YandexGPT not configured, using mock...')
        result = generateMockAnalysis(
          contract.role || '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
          contract.description || '–ù–µ —É–∫–∞–∑–∞–Ω–æ', 
          contract.filename || '–¥–æ–∫—É–º–µ–Ω—Ç',
          parsedDocument.isScanned || false
        )
      }

      console.log(`Analysis completed with ${provider}:`, {
        risksCount: {
          critical: result.risks?.critical?.length || 0,
          moderate: result.risks?.moderate?.length || 0,
          low: result.risks?.low?.length || 0
        },
        recommendationsCount: result.recommendations?.length || 0,
        marketingScore: result.marketingScore,
        tokenEstimate: result.token_estimate
      })

      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      result.highlightedPoints = result.mentionedClauses || []
      result.documentInfo = {
        type: fileExtension,
        isScanned: parsedDocument.isScanned,
        pageCount: parsedDocument.pageCount,
        analyzedAt: new Date().toISOString()
      }

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å provider
      const updatedContract = await prisma.contract.update({
        where: { id: contractId },
        data: {
          status: 'done',
          plainText: parsedDocument.html,
          result: { ...result, provider }
        }
      })

      console.log('Contract updated successfully with provider:', provider)

    } catch (analysisError) {
      console.error('Analysis error:', analysisError)
      analysisStatus = 'error'
      
      await prisma.contract.update({
        where: { id: contractId },
        data: { 
          status: 'error',
          result: {
            error: analysisError instanceof Error ? analysisError.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞'
          }
        }
      })
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞
    if (contract.user?.email) {
      console.log('Sending email notification to:', contract.user.email)
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const userSettings = contract.user.settings as any
      if (userSettings?.emailNotifications !== false) {
        await sendAnalysisCompleteEmail(
          contract.user.email,
          contractId,
          contract.filename || '–¥–æ–∫—É–º–µ–Ω—Ç',
          analysisStatus
        ).catch(emailError => {
          console.error('Failed to send email notification:', emailError)
          // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ email
        })
      } else {
        console.log('Email notifications disabled for user')
      }
    }

    if (analysisStatus === 'done') {
      return NextResponse.json({ 
        success: true,
        message: '–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω —É—Å–ø–µ—à–Ω–æ'
      })
    } else {
      return NextResponse.json({ 
        error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞'
      }, { status: 500 })
    }

  } catch (error) {
    console.error('Contract analysis error:', error)
    return NextResponse.json({ 
      error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' 
    }, { status: 500 })
  }
}